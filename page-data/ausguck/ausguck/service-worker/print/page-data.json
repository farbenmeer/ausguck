{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/ausguck/ausguck/service-worker/print","result":{"data":{"deck":{"id":"44bf5686-15b2-540a-93c4-77fde0eb0f68","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Head = makeShortcode(\"Head\");\nvar Image = makeShortcode(\"Image\");\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Service Worker\"), mdx(\"meta\", {\n    name: \"author\",\n    content: \"Tobias Linkohr\"\n  })), mdx(\"h1\", null, \"Service Worker\"), mdx(\"p\", null, \"by Tobias Linkohr\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Tobi-mmt\"\n  }), \"github\"), \")\"), mdx(\"hr\", null), mdx(\"h1\", null, \"What is it?\"), mdx(\"p\", null, \"programmable network proxy\"), mdx(\"hr\", null), mdx(Image, {\n    src: serviceWorker,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"what can we do ?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"receive push notifications\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use app offline\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"cache management\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Good to know\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The Service Worker runs in its \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"own global script context\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It isn\\u2019t tied to a specific web page\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"can't\"), \" access the DOM\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Lifecycle\"), mdx(Image, {\n    src: Lifecycle,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"use a service-worker (sw)\"), mdx(\"h1\", null, \"step by step\"), mdx(\"hr\", null), mdx(\"h1\", null, \"1. Register SW\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"if ('serviceWorker' in navigator) {\\n  window.addEventListener('load', function() {\\n    navigator.serviceWorker.register('/sw.js').then(function(registration) {\\n      // Registration was successful\\n      console.log('ServiceWorker registration successful');\\n    }, function(err) {\\n      // Registration failed\\n      console.log('ServiceWorker registration failed: ', err);\\n    });\\n  });\\n}\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"2. Activate SW\"), mdx(\"p\", null, \"Browser activates the SW after installation\"), mdx(\"hr\", null), mdx(Image, {\n    src: Waiting,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"3. Use SW\"), mdx(\"p\", null, \"Write SW with workbox\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"importScripts(\\\"https://storage.googleapis.com/workbox-cdn/releases/3.6.3/workbox-sw.js\\\")\\n\\nworkbox.skipWaiting()\\n\\n...\\n\\n// 'network first' for all js file requests\\nworkbox.routing.registerRoute(\\\"**/*.js\\\", workbox.strategies.networkFirst(), 'GET')\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"Inside your js APP (client)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"subscribeToNotifications = async () => {\\n  const registration = await navigator.serviceWorker.ready;\\n\\n  firebase.initializeApp({ messagingSenderId: \\\"****\\\" })\\n\\n  const messaging = firebase.messaging()\\n\\n  messaging.onMessage(payload =>\\n    console.log('receive foreground message')\\n  );\\n\\n  if (registration) {\\n    // handels background messages\\n    messaging.useServiceWorker(registration);\\n  }\\n\\n  return messaging\\n    .requestPermission()\\n    .catch(e => {\\n      console.error(e);\\n    });\\n};\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Good to know 2\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"SW can't be older then 24h (autoupdate from Browser)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"HTTPS is required\")), mdx(\"hr\", null), mdx(\"h1\", null, \"great examples\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.towergame.app/\"\n  }), \"Towergame\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.pinterest.de/\"\n  }), \"Pinterest\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Resources:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers\"\n  }), \"(MDN) Using Service Workers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developers.google.com/web/tools/workbox/guides/get-started\"\n  }), \"Workbox Docs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developers.google.com/web/fundamentals/primers/service-workers/\"\n  }), \"(Google) Service Workers: an Introduction\"))));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Service Worker"}},"pageContext":{"id":"44bf5686-15b2-540a-93c4-77fde0eb0f68","slug":"/ausguck/ausguck/service-worker","title":"Service Worker"}},"staticQueryHashes":[]}