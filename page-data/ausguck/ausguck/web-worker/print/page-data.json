{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/ausguck/ausguck/web-worker/print","result":{"data":{"deck":{"id":"731c0437-8903-537e-8d9f-42c586abea99","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Head = makeShortcode(\"Head\");\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Web Worker\")), mdx(\"h1\", null, \"Web Worker\"), mdx(\"p\", null, \"by Max Str\\xFCbing\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/mxstrbng\"\n  }), \"twitter\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mstruebing\"\n  }), \"github\"), \")\"), mdx(\"hr\", null), mdx(\"p\", null, \"Runs scripts in the background\"), mdx(\"hr\", null), mdx(\"p\", null, \"Not in the main thread\"), mdx(\"hr\", null), mdx(\"p\", null, \"No blocking\"), mdx(\"hr\", null), mdx(\"p\", null, \"Stay responsive during expensive calculations\"), mdx(\"hr\", null), mdx(\"p\", null, \"No access to the DOM\"), mdx(\"hr\", null), mdx(\"p\", null, \"Communication via messages\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const browserSupportsWebWorkers =\\n    () => typeof window.Worker === \\\"function\\\";\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"Every major browser\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// main.js\\nconst worker = new Worker('worker.js');\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// main.js\\nconst MY_PAYLOAD = { payload: \\\"SOME_STRING\\\" };\\nworker.postMessage(MY_PAYLOAD);\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// main.js\\nworker.onmessage = event => {\\n    console.log(event);\\n    // do Stuff\\n};\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// main.js\\nworker.terminate();\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// worker.js\\nonmessage = event => {\\n  console.log(event.data);\\n  // do complex stuff\\n  postMessage(result);\\n};\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"// worker.js\\nonmessage = ({data}) => {\\n  console.log(data)\\n  // do complex stuff\\n  postMessage(result);\\n}\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"DEMO\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://farbenmeer.github.io/ausguck/examples/web-worker/index.html\"\n  }), \"https://farbenmeer.github.io/ausguck/examples/web-worker/index.html\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Web_worker\"\n  }), \"https://en.wikipedia.org/wiki/Web_worker\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\"\n  }), \"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\"\n  }), \"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Thanks!\"));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Web Worker"}},"pageContext":{"id":"731c0437-8903-537e-8d9f-42c586abea99","slug":"/ausguck/ausguck/web-worker","title":"Web Worker"}},"staticQueryHashes":[]}