{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/higher-order-components","matchPath":"/higher-order-components/*","result":{"data":{"deck":{"id":"6abdd3a6-9f88-5979-b496-0a0017026ff7","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Head = makeShortcode(\"Head\");\nvar Image = makeShortcode(\"Image\");\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Higher Order Components\"), mdx(\"meta\", {\n    name: \"author\",\n    content: \"Max Str\\xFCbing\"\n  })), mdx(\"h1\", null, \"Higher Order Components\"), mdx(\"p\", null, \"by Max Str\\xFCbing\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/mxstrbng\"\n  }), \"twitter\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mstruebing\"\n  }), \"github\"), \")\"), mdx(\"hr\", null), mdx(\"p\", null, \"What is a Higher Order Component?\"), mdx(\"hr\", null), mdx(\"p\", null, \"A higher-order component (HOC) is an advanced technique in React for reusing component logic. HOCs are not part of the React API, per se. They are a pattern that emerges from React\\u2019s compositional nature.\\n(source: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/higher-order-components.html\"\n  }), \"https://reactjs.org/docs/higher-order-components.html\"), \")\"), mdx(\"hr\", null), mdx(\"p\", null, \"What does that mean?\"), mdx(\"hr\", null), mdx(\"p\", null, \"Concretely, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"a higher-order component is a function that takes a component and returns a new component\"), \".\\n(source: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/higher-order-components.html\"\n  }), \"https://reactjs.org/docs/higher-order-components.html\"), \")\"), mdx(\"hr\", null), mdx(\"p\", null, \"Takes a component and returns a component\"), mdx(\"hr\", null), mdx(\"p\", null, \"Show me an example\"), mdx(\"hr\", null), mdx(\"p\", null, \"enhanceComponentWithLog gets a Component and the result is rendered\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class MyComponent extends React.Component {\\n  render() {\\n    const Component = () => <div>Hello!</div>\\n    const EnhancedComponent = enhanceComponentWithLog(Component)\\n\\n    return <EnhancedComponent />\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"enhanceComponentWithLog gets a Component does a console.log and returns the Component\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const enhanceComponentWithLog = Component => {\\n  console.log(`Component ${Component()} rendered`)\\n  return Component;\\n}\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"Concretely, \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"a higher-order component is a function that takes a component and returns a new component\"), \".\"), mdx(\"hr\", null), mdx(\"p\", null, \"This can be used to do all kinds of things, mainly to enhance a component with other features which are not part of the component itself or to share\\nlogic of features between components.\"), mdx(\"p\", null, \"hover state, data fetching, clickhandler, ...\"), mdx(\"hr\", null), mdx(\"p\", null, \"Example:\"), mdx(\"h1\", null, \"Click Counter\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const enhanceWithClickCounter = Component => {\\n  return class withClickCounter extends React.Component {\\n    state = {\\n      clicks: 0\\n    }\\n\\n    increaseClicks = () => {\\n      this.setState(prevState => ({\\n        clicks: prevState.clicks + 1\\n      }))\\n    }\\n\\n    render() {\\n      const {clicks} = this.state\\n\\n      return (\\n        <>\\n        <div onClick={this.increaseClicks}>\\n          {clicks}\\n          <Component />\\n        </div>\\n        </>\\n      )\\n    }\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class App extends Component {\\n  render() {\\n    const EnhancedHelloComponent = enhanceWithClickCounter(() => <div>Hello</div>)\\n    const EnhancedWorldComponent = enhanceWithClickCounter(() => <span>World</span>)\\n\\n    return (\\n      <>\\n        <EnhancedHelloComponent />\\n        <EnhancedWorldComponent />\\n      </>\\n    );\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(Image, {\n    src: example,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Example 2:\"), mdx(\"p\", null, \"Background change on hover\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"export default class App extends Component {\\n  render() {\\n    const RedComponent = enhanceWithBackgroundHover(() => <div>Hello</div>)(\\\"red\\\")\\n    const BlueComponent = enhanceWithBackgroundHover(() => <div>World</div>)(\\\"blue\\\")\\n    return (\\n      <div>\\n        <RedComponent/>\\n        <BlueComponent/>\\n      </div>\\n    );\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const enhanceWithBackgroundHover = Component => color => {\\n  return class withBackgroundHover extends React.Component {\\n    render() {\\n      return (\\n        <div class={`background ${color}`}>\\n          <Component />\\n        </div>\\n      )\\n    }\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(Image, {\n    src: example2,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(Image, {\n    src: example3,\n    style: {\n      backgroundSize: 'auto'\n    },\n    mdxType: \"Image\"\n  }), mdx(\"hr\", null), mdx(\"p\", null, \"resources:\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://reactjs.org/docs/higher-order-components.html\"\n  }), \"react documentation\")));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Higher Order Components"}},"pageContext":{"matchPath":"/higher-order-components/*","id":"6abdd3a6-9f88-5979-b496-0a0017026ff7","slug":"/ausguck/higher-order-components","title":"Higher Order Components"}},"staticQueryHashes":[]}