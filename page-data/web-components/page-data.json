{"componentChunkName":"component---node-modules-gatsby-theme-mdx-deck-src-templates-deck-js","path":"/web-components","matchPath":"/web-components/*","result":{"data":{"deck":{"id":"386b34b1-b9cb-5b4c-9998-66208b7a2658","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar theme = customTheme;\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Head = makeShortcode(\"Head\");\nvar layoutProps = {\n  theme: theme,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Web Components\")), mdx(\"h1\", null, \"Web Components\"), mdx(\"p\", null, \"by Max Str\\xFCbing\\n(\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/mxstrbng\"\n  }), \"twitter\"), \", \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mstruebing\"\n  }), \"github\"), \")\"), mdx(\"hr\", null), mdx(\"p\", null, \"Web Components is a suite of different technologies allowing you to create reusable custom elements \\u2014 with their functionality encapsulated away from the rest of your code \\u2014 and utilize them in your web apps.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Web_Components\"\n  }), \"https://developer.mozilla.org/en-US/docs/Web/Web_Components\")), mdx(\"hr\", null), mdx(\"p\", null, \"You can create your own custom components i.e: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<my-button>\")), mdx(\"hr\", null), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"-\"), \" in the name is mandatory.\"), mdx(\"hr\", null), mdx(\"p\", null, \"There are three main concepts.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Custom Element\"), mdx(\"p\", null, \"A set of JS-APIs to define your custom components and their behaviour\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Shadow DOM\"), mdx(\"p\", null, \"API to encapsulate an own DOM-tree to your custom component without\\ninterferring with the main-DOM.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"HTML templates\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<template>\"), \": is not rendered in the DOM but can be referenced via JS\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<slot>\"), \": inject other components into your own component.\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"customElements.define(name, component);\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"customElements.define(\\n  'my-element',\\n  class extends HTMLElement {\\n    constructor() {\\n      super();\\n      this.attachShadow({mode: 'open'});\\n\\n      this.shadowRoot.innerHTML = `\\n              <p>This is my own element</p>\\n          `;\\n    }\\n  },\\n);\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<my-element />\\n\")), mdx(\"hr\", null), mdx(\"p\", null, \"There are many more to extend i.e. \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HTMLButtonElement\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HTMLAudioElement\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"HTMLDivElement\"), \" ....\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://html.spec.whatwg.org/multipage/indices.html#element-interfaces\"\n  }), \"https://html.spec.whatwg.org/multipage/indices.html#element-interfaces\")), mdx(\"hr\", null), mdx(\"p\", null, \"You can also extend other custom components.\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Lifecycle Methods\"), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"connectedCallback\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the element has been inserted into the DOM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"componentDidMount\"))), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"disconnectedCallback\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"the element has been removed from the DOM\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"right after \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"componentWillUnmount\"))), mdx(\"hr\", null), mdx(\"h3\", null, mdx(\"inlineCode\", {\n    parentName: \"h3\"\n  }, \"attributeChangedCallback\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"everytime a passed property changes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"*which is observed\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Lifecycle order\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"constructor\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attributeChangedCallback\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"connectedCallback\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"disconnectedCallback\"))), mdx(\"hr\", null), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"constructor\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"constructor() {\\n  super(); // is mandatory\\n\\n  // needed to use the shadow dom\\n  this.attachShadow({mode: 'open'});\\n\\n  this.shadowRoot.innerHTML =\\n    `<p>the HTML inside the shadow DOM</p>`;\\n}\\n\")), mdx(\"hr\", null), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attributeChangedCallback\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"static get observedAttributes() {\\n  return ['view'];\\n}\\n\\nattributeChangedCallback(attr, oldVal, newVal) {\\n  if (attr === 'view' && newVal) {\\n    this.switchView(newVal);\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"connectedCallback\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"connectedCallback() {\\n  this.property = this.getAttribute('property');\\n\\n  this.shadowRoot.querySelector('selector')\\n    .addEventListener('event', func)\\n}\\n\")), mdx(\"hr\", null), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"disconnectedCallback\"))), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"disconnectedCallback() {\\n  this.shadowRoot.querySelector('selector')\\n    .removeEventListener('event', func)\\n}\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Scope\"), mdx(\"p\", null, \"Every method on your custom element is public.\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"class MyElement extends HTMLElement {\\n  // lots of stuff\\n  doSomething() {\\n    // do something in this method\\n  }\\n}\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const element = document.querySelector('my-element');\\nelement.doSomething();\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Styling\"), mdx(\"p\", null, \"Scoped by default\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"my-element {\\n    text-transform: uppercase;\\n}\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"this.shadowRoot.innerHTML = `\\n        <style>\\n            div {\\n                background-color: red;\\n            }\\n        </style>\\n        // ... HTML\\n`;\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"this.shadowRoot.innerHTML = `\\n        <style>\\n            :host {\\n                text-transform: uppercase;\\n            }\\n        </style>\\n        // ... HTML\\n`;\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"this.shadowRoot.innerHTML = `\\n    <style>\\n        @import \\\"https://my-cool-url/stylesheet.css\\\";\\n    </style>\\n`;\\n</style>\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Flexibility through css-vars\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-css\"\n  }), \"/* outsite of the Web-Component */\\nmy-element {\\n    --color: red;\\n}\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// inside of the Web-Component\\nthis.shadowRoot.innerHTML = `\\n    <style>\\n        p {\\n          color: var(--color);\\n        }\\n    </style>\\n    <p>This is my own element</p>\\n`;\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Inject Components via Slots\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<!-- outsite of the Web-Component -->\\n<my-element>\\n    <h1 slot=\\\"item\\\">Headline from the outsite</h1>\\n</my-element>\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// inside of the Web-Component\\n<div>\\n    <slot name=\\\"item\\\"></slot>\\n</div>\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Events\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"connectedCallback() {\\n  const p = this.shadowRoot.querySelector('p');\\n  p.addEventListener('click', () => {\\n    this.dispatchEvent(\\n      new CustomEvent('custom', {\\n        detail: {message: 'a custom event'},\\n      }),\\n    );\\n  });\\n}\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"document.querySelector('my-element')\\n  .addEventListener('custom', e =>\\n    console.log(e.detail.message),\\n);\\n\")), mdx(\"hr\", null), mdx(\"h2\", null, \"Extending native elements\"), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"customElements.define('my-button',\\n    class extends HTMLButtonElement {\\n        constructor() {\\n            super();\\n        }\\n\\n        connectedCallback() {\\n            console.log('my extended button got rendered');\\n            this.addEventListener('click', () => {\\n              console.log('clicked');\\n            });\\n        }\\n    }, {extends: 'button'});\\n\")), mdx(\"hr\", null), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-html\"\n  }), \"<button is=\\\"my-button\\\">my-button</button>\\n\")), mdx(\"hr\", null), mdx(\"h1\", null, \"LIVE CODING\"), mdx(\"hr\", null), mdx(\"p\", null, \"Livecode results(just watch the source):\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(character-counter)\", \"[https://farbenmeer.github.io/ausguck/examples/web-components/index.html]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"(observed-attributes)\", \"[https://farbenmeer.github.io/ausguck/examples/web-components/observed-attributes.html]\")), mdx(\"p\", null, \"(you should use chrome to watch these)\"), mdx(\"hr\", null), mdx(\"h2\", null, \"Resources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/Web_Components\"\n  }), \"https://developer.mozilla.org/en-US/docs/Web/Web_Components\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Web_Components\"\n  }), \"https://en.wikipedia.org/wiki/Web_Components\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://css-tricks.com/modular-future-web-components/\"\n  }), \"https://css-tricks.com/modular-future-web-components/\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Thanks!\"));\n}\n;\nMDXContent.isMDXComponent = true;","title":"Web Components"}},"pageContext":{"matchPath":"/web-components/*","id":"386b34b1-b9cb-5b4c-9998-66208b7a2658","slug":"/ausguck/web-components","title":"Web Components"}},"staticQueryHashes":[]}